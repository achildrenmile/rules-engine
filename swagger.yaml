swagger: "2.0"
info:
  title: Mainflux rules engine
  description: HTTP API for managing alarming rules over an HTTP using custom DSL.
  version: "0.2.0-rc.1"
produces:
  - "application/json"
paths:
  /users/{userId}/rules:
    get:
      summary: Retrieves user's rules
      description: |
        Retrieves list of user's defined rules.
      tags:
        - rules
      parameters:
        - $ref: "#/parameters/UserId"
      responses:
        200:
          $ref: "#/definitions/RuleList"
        400:
          description: Malformed user ID provided.
  /users/{userId}/rules/{ruleId}:
    get:
      summary: Retrieves specific user's rule
      description: |
        Retrieves specific user's defined rule.
      tags:
        - rules
      parameters:
        - $ref: "#/parameters/UserId"
        - $ref: "#/parameters/RuleId"
      responses:
        200:
          $ref: "#/definitions/RuleRes"
        400:
          description: Malformed user ID or rule ID provided.
        404:
          description: Rule does not exist.
    delete:
      summary: Removes specific user's rule
      description: |
        Removes specific user's rule.
      tags:
        - rules
      parameters:
        - $ref: "#/parameters/UserId"
        - $ref: "#/parameters/RuleId"
      responses:
        204:
          description: Rule successfully removed.
        400:
          description: Malformed user ID or rule ID provided.
        404:
          description: Rule does not exist.

parameters:
  UserId:
    name: userId
    description: Unique user identifier.
    in: path
    type: string
    format: uuid
    required: true
  RuleId:
    name: ruleId
    description: Unique rule identifier.
    in: path
    type: string
    format: uuid
    required: true

definitions:
  RuleList:
    type: object
    properties:
      rules:
        type: array
        minItems: 0
        uniqueItems: true
        items:
          $ref: "#/definitions/RuleRes"
  RuleRes:
    type: object
    properties:
      id:
        type: string
        format: uuid
        description: Unique rule identifier generated by service.
      name:
        type: string
        description: Free-form rule name.
      conditions:
        type: array
        description: List of conditions needs to be triggers to satisfy rule.
        items:
          $ref: "#/definitions/Condition"
        minItems: 1
      actions:
        type: array
        description: List of actions to execute for satisfied rule.
        items:
          oneOf:
           - $ref: "#/definitions/SendEmailAction"
           - $ref: "#/definitions/TurnOffAction"
        minItems: 1
    required:
      - id
      - conditions
      - actions
  Condition:
    type: object
    description: Simple condition.
    properties:
      deviceId:
        type: string
        format: uuid
        description: Unique identifier of device.
      property:
        type: string
        description: Device's specific property.
      operator:
        type: string
        description: One of the DSL's predefined operators.
        enum: ['=', '!=', '<', '<=', '>', '>=', 'BETWEEN']
      value:
        type: string
        description: Value which is compared to specified device property.
    required:
      - deviceId
      - property
      - operator
      - value
  SendEmailAction:
    type: object
    properties:
      name:
        type: string
        description: Name of the action.
        enum:
          - SEND EMAIL
      content:
        type: string
        description: Client's defined content for email body.
      recipient:
        type: string
        description: Email address where email should be send to.
    required:
      - name
      - content
      - recipient
  TurnOffAction:
    type: object
    properties:
      name:
        type: string
        description: Name of the action.
        enum:
          - TURN OFF
      deviceId:
        type: string
        format: uuid
        description: Unique identifier of device.
    required:
      - name
      - deviceId
